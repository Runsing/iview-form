webpackJsonp([1],{"./examples/src/index.js":function(module,__webpack_exports__,__webpack_require__){"use strict";eval('Object.defineProperty(__webpack_exports__, "__esModule", { value: true });\n\n// EXTERNAL MODULE: external "Vue"\nvar external__Vue_ = __webpack_require__("vue");\nvar external__Vue__default = /*#__PURE__*/__webpack_require__.n(external__Vue_);\n\n// EXTERNAL MODULE: ./node_modules/babel-runtime/helpers/extends.js\nvar helpers_extends = __webpack_require__("./node_modules/babel-runtime/helpers/extends.js");\nvar extends_default = /*#__PURE__*/__webpack_require__.n(helpers_extends);\n\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./packages/iview-form/iview-form.vue\n\n\nvar getPrefix = function getPrefix(tag, lib) {\n  var iviewMap = {\n    \'form\': \'i-form\',\n    \'form-item\': \'form-item\',\n    \'input\': \'i-input\',\n    \'select\': \'i-select\',\n    \'option\': \'i-option\',\n    \'checkbox\': \'checkbox\',\n    \'checkbox-group\': \'checkbox-group\',\n    \'date-picker\': \'date-picker\',\n    \'time-picker\': \'time-picker\',\n    \'radio\': \'radio\',\n    \'radio-group\': \'radio-group\',\n    \'switch\': \'i-switch\',\n    \'slider\': \'slider\',\n    \'button\': \'i-button\',\n    \'row\': \'row\',\n    \'col\': \'i-col\',\n    \'input-number\': \'input-number\'\n  };\n  var elementMap = {\n    \'form\': \'el-form\',\n    \'form-item\': \'el-form-item\',\n    \'input\': \'el-input\',\n    \'select\': \'el-select\',\n    \'option\': \'el-option\',\n    \'checkbox\': \'el-checkbox\',\n    \'checkbox-group\': \'el-checkbox-group\',\n    \'date-picker\': \'el-date-picker\',\n    \'time-picker\': \'el-time-picker\',\n    \'radio\': \'el-radio\',\n    \'radio-group\': \'el-radio-group\',\n    \'switch\': \'el-switch\',\n    \'slider\': \'el-slider\',\n    \'button\': \'el-button\',\n    \'row\': \'el-row\',\n    \'col\': \'el-col\',\n    \'input-number\': \'el-input-number\'\n  };\n\n  return lib === \'iview\' ? iviewMap[tag] : elementMap[tag];\n};\n\n/* harmony default export */ var iview_form = ({\n  name: \'iview-form\',\n  props: {\n    // 是否启用 grid 布局\n    grid: {\n      type: [Array, Number]\n    },\n    // formItem 项\n    formList: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    // 是否显示整个控制按钮\n    notCtrl: {\n      type: Boolean,\n      default: false\n    },\n    // 是否开启 input 标签默认\n    enterSubmit: {\n      type: Boolean,\n      default: false\n    },\n    // 默认 ui 库\n    lib: {\n      type: String,\n      default: \'iview\'\n    },\n    // 是否全局 disabled\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    // 默认标签宽度\n    \'label-width\': {\n      type: Number,\n      default: 100\n    },\n    // 默认内容宽度\n    \'content-width\': {\n      type: [Number, String],\n      default: 240\n    },\n    // submit 按钮文本\n    submitText: {\n      type: String,\n      default: \'提交\'\n    },\n    // 重置按钮文本\n    resetText: {\n      type: String,\n      default: \'重置\'\n    },\n    // 是否拥有 提交 按钮\n    hasSubmitBtn: {\n      type: Boolean,\n      default: true\n    },\n    // 是否拥有 重置 按钮\n    hasResetBtn: {\n      type: Boolean,\n      default: true\n    },\n    // 原生 form 标签上的 props\n    options: {\n      type: Object\n    },\n    // 开启全局 clearable\n    clearable: {\n      type: Boolean,\n      default: true\n    },\n    // 文本框默认字符个数\n    maxlength: {\n      type: [Number, String],\n      default: 20\n    },\n    // 多行文本框默认字符个数\n    textareaMaxlength: {\n      type: Number,\n      default: 256\n    }\n  },\n  data: function data() {\n    return {\n      form: this.initForm()\n    };\n  },\n  render: function render(h) {\n    return h(getPrefix(\'form\', this.lib), {\n      props: extends_default()({\n        model: this.form,\n        rules: this.rules,\n        \'label-width\': this.lib === \'iview\' ? this[\'labelWidth\'] : this[\'labelWidth\'] + \'px\'\n      }, this.options),\n      ref: \'form\',\n      nativeOn: {\n        submit: function submit(e) {\n          e.preventDefault();\n          e.stopPropagation();\n        }\n      }\n    }, [this.$slots.prepend, this.renderFormList(h), !this.notCtrl && this.renderSubmit(h), this.$slots.default]);\n  },\n\n  computed: {\n    rules: function rules() {\n      var rules = {};\n      this.formList.forEach(function (item) {\n        if (item.rule !== undefined) {\n          rules[item.key] = item.rule;\n        }\n      });\n      return rules;\n    },\n    gridNum: function gridNum() {\n      return this.grid;\n    }\n  },\n  methods: {\n    initForm: function initForm() {\n      var form = {};\n      var map = {\n        \'input\': \'\',\n        \'select\': null,\n        \'checkbox\': false,\n        \'checkbox-group\': [],\n        \'date\': new Date(),\n        \'datetime\': new Date(),\n        \'daterange\': [],\n        \'datetimerange\': [],\n        \'time\': \'\',\n        \'radio\': false,\n        \'radio-group\': \'\',\n        \'slider\': 0,\n        \'switch\': false,\n        \'input-number\': 0\n      };\n      this.formList.forEach(function (item) {\n        var defaultValue = \'\';\n        defaultValue = item.defaultValue !== undefined ? item.defaultValue : map[item.type];\n        if (item.key) {\n          form[item.key] = defaultValue;\n        }\n      });\n      return form;\n    },\n    renderFormList: function renderFormList(h) {\n      var list = [];\n      var grid = this.grid;\n      // 处理 grid 为不同值时\n      if (typeof grid === \'number\') {\n        list = this.getFormListByNumber(h);\n      } else if (Array.isArray(grid)) {\n        if (grid.every(function (item) {\n          return !Array.isArray(item);\n        })) {\n          list = this.getFormListByArray(h);\n        } else {\n          list = this.getFormListByGrid(h);\n        }\n      } else {\n        list = this.getFormList(h);\n      }\n      return list;\n    },\n    getFormList: function getFormList(h) {\n      var _this = this;\n\n      return this.formList.map(function (item) {\n        return _this.getFormItem(h, item, _this.getContent(h, item));\n      });\n    },\n\n    // 当 grid 为数字时\n    getFormListByNumber: function getFormListByNumber(h) {\n      var list = [];\n      // 过滤 grid\n      var grid = ~~Math.abs(this.grid);\n      if (grid < 1) grid = 1;\n      for (var i = 0; i < this.formList.length; i += grid) {\n        var childrenList = [];\n        // 获取当前分成几列 grid 为 number 时\n        for (var j = 0; j < grid && i + j < this.formList.length; j++) {\n          var children = this.formList[i + j];\n          if (!children) break;\n          var childrenItem = this.getFormItem(h, children, this.getContent(h, children));\n          var childrenParts = h(getPrefix(\'col\', this.lib), {\n            props: {\n              span: 24 / grid\n            }\n          }, [childrenItem]);\n          childrenList.push(childrenParts);\n        }\n        var row = h(getPrefix(\'row\', this.lib), childrenList);\n        list.push(row);\n      }\n      return list;\n    },\n\n    // 当 grid 为一维数组时\n    getFormListByArray: function getFormListByArray(h) {\n      var list = [];\n      var gridIndex = 0;\n      for (var i = 0; i < this.formList.length;) {\n        var childrenList = [];\n        var grid = this.grid[gridIndex];\n        for (var j = 0; j < grid; j++) {\n          var children = this.formList[i + j];\n          if (!children) break;\n          var childrenItem = this.getFormItem(h, children, this.getContent(h, children));\n          var childrenParts = h(getPrefix(\'col\', this.lib), {\n            props: {\n              span: 24 / grid\n            }\n          }, [childrenItem]);\n          childrenList.push(childrenParts);\n        }\n        var row = h(getPrefix(\'row\', this.lib), childrenList);\n        list.push(row);\n        gridIndex += 1;\n        i += grid;\n      }\n      return list;\n    },\n\n    // 当 grid 为二维数组\n    getFormListByGrid: function getFormListByGrid(h) {\n      var list = [];\n      var gridIndex = 0;\n      for (var i = 0; i < this.formList.length;) {\n        var childrenList = [];\n        var grid = this.grid[gridIndex];\n        if (!grid) grid = [1];\n        for (var j = 0; j < grid.length; j++) {\n          var children = this.formList[i + j];\n          if (!children) break;\n          var childrenItem = this.getFormItem(h, children, this.getContent(h, children));\n          var childrenParts = h(getPrefix(\'col\', this.lib), {\n            props: {\n              span: grid[j]\n            }\n          }, [childrenItem]);\n          childrenList.push(childrenParts);\n        }\n        var row = h(getPrefix(\'row\', this.lib), childrenList);\n        list.push(row);\n        gridIndex += 1;\n        i += grid.length;\n      }\n      return list;\n    },\n    getContent: function getContent(h, item) {\n      var content = void 0;\n      switch (item.type) {\n        case \'input\':\n          content = this.renderInput(h, item);\n          break;\n        case \'select\':\n          content = this.renderSelect(h, item);\n          break;\n        case \'checkbox\':\n          content = this.renderCheckbox(h, item);\n          break;\n        case \'checkbox-group\':\n          content = this.renderCheckboxGroup(h, item);\n          break;\n        case \'date\':\n          content = this.renderDatePicker(h, item);\n          break;\n        case \'datetime\':\n          content = this.renderDatePicker(h, item);\n          break;\n        case \'daterange\':\n          content = this.renderDateRange(h, item);\n          break;\n        case \'datetimerange\':\n          content = this.renderDateRange(h, item);\n          break;\n        case \'time\':\n          content = this.renderTimePicker(h, item);\n          break;\n        case \'radio\':\n          content = this.renderRadio(h, item);\n          break;\n        case \'radio-group\':\n          content = this.renderRadioGroup(h, item);\n          break;\n        case \'switch\':\n          content = this.renderSwitch(h, item);\n          break;\n        case \'slider\':\n          content = this.renderSlider(h, item);\n          break;\n        case \'input-number\':\n          content = this.renderInputNumber(h, item);\n          break;\n        default:\n          if (typeof item.renderContent === \'function\') {\n            content = item.renderContent(h, item, this.form);\n          }\n          break;\n      }\n      return content;\n    },\n    getFormItem: function getFormItem(h, item, content) {\n      if (item.isShow === false) return;else if (typeof item.isShow === \'function\') {\n        if (item.isShow(this.form, item) === false) {\n          return;\n        }\n      }\n      if (typeof item.render === \'function\') {\n        return item.render(h, item);\n      } else {\n        return h(getPrefix(\'form-item\', this.lib), {\n          props: {\n            prop: item.key\n          }\n        }, [this.renderTitle(h, item), content]);\n      }\n    },\n\n    // 渲染 title\n    renderTitle: function renderTitle(h, item) {\n      return h(\n        \'span\',\n        { slot: \'label\' },\n        [item.required === true ? h(\n          \'span\',\n          { style: \'color: font\' },\n          [\'*\']\n        ) : \'\', typeof item.renderTitle === \'function\' ? h(\'span\', [item.renderTitle(h, item, this.getFormBykey(item.key))]) : h(\'span\', [item.title])]\n      );\n    },\n\n    // 渲染提交 按钮\n    renderSubmit: function renderSubmit(h) {\n      var btns = [];\n      if (this.hasSubmitBtn) {\n        btns.push(h(getPrefix(\'button\', this.lib), {\n          props: {\n            type: \'primary\'\n          },\n          on: {\n            click: this.submit\n          }\n        }, this.submitText));\n      }\n      if (this.hasResetBtn) {\n        btns.push(h(getPrefix(\'button\', this.lib), {\n          style: {\n            \'margin-left\': \'10px\'\n          },\n          on: {\n            click: this.reset\n          }\n        }, this.resetText));\n      }\n\n      return h(getPrefix(\'form-item\', this.lib), btns);\n    },\n\n    // 渲染 input\n    renderInput: function renderInput(h, item) {\n      var _this2 = this;\n\n      var props = item.props || {};\n      var attrs = item.attrs || {};\n      // 让 element-ui 在 props 里也可以设置 placeholder\n      if (props.placeholder) {\n        attrs.placeholder = props.placeholder;\n      }\n\n      // 让 element-ui 在 props 里也可以设置 maxlength\n      if (props.type !== \'textarea\') {\n        attrs.maxlength = +props.maxlength || +this.maxlength;\n      } else {\n        // textarea 长度\n        attrs.maxlength = +props.maxlength || +this.textareaMaxlength;\n      }\n\n      item.attrs = attrs;\n\n      var tag = {\n        h: h,\n        item: item,\n        tagName: getPrefix(\'input\', this.lib),\n        props: extends_default()({\n          clearable: this.clearable\n        }, props),\n        nativeOn: {\n          keydown: function keydown(e) {\n            if (e.keyCode === 13 && _this2.enterSubmit && props.type !== \'textarea\') {\n              _this2.submit();\n            }\n          }\n        }\n      };\n      return this.generateTag(tag);\n    },\n\n    // 渲染 select\n    renderSelect: function renderSelect(h, item) {\n      var _this3 = this;\n\n      var tag = {\n        h: h,\n        item: item,\n        tagName: getPrefix(\'select\', this.lib),\n        props: extends_default()({\n          clearable: this.clearable\n        }, item.props || {}),\n        children: item.options.map(function (option) {\n          return h(getPrefix(\'option\', _this3.lib), {\n            props: {\n              label: option.text,\n              value: option.value\n            }\n          }, [typeof item.renderOption === \'function\' ? item.renderOption(h, option, item) : item.text]);\n        })\n      };\n      return this.generateTag(tag);\n    },\n\n    // 渲染 单个checkbox\n    renderCheckbox: function renderCheckbox(h, item) {\n      var tag = {\n        h: h,\n        item: item,\n        tagName: getPrefix(\'checkbox\', this.lib),\n        props: item.props || {},\n        children: item.text\n      };\n      return this.generateTag(tag);\n    },\n\n    // 渲染 checkbox group\n    renderCheckboxGroup: function renderCheckboxGroup(h, item) {\n      var _this4 = this;\n\n      var tag = {\n        h: h,\n        item: item,\n        tagName: getPrefix(\'checkbox-group\', this.lib),\n        props: item.props || {},\n        children: item.options.map(function (option) {\n          return h(getPrefix(\'checkbox\', _this4.lib), {\n            props: {\n              label: option.value\n            }\n          }, option.text);\n        })\n      };\n      return this.generateTag(tag);\n    },\n\n    // 渲染 datepicker\n    renderDatePicker: function renderDatePicker(h, item) {\n      var tag = {\n        h: h,\n        item: item,\n        tagName: getPrefix(\'date-picker\', this.lib),\n        props: extends_default()({\n          clearable: this.clearable,\n          type: item.type\n        }, item.props || {})\n      };\n      return this.generateTag(tag);\n    },\n\n    // 渲染范围的 daterange\n    renderDateRange: function renderDateRange(h, item) {\n      // 处理 datetimerange 可能宽度不够的问题\n      if (item.type === \'datetimerange\') {\n        item.width = item.width || 360;\n      }\n      var tag = {\n        h: h,\n        item: item,\n        tagName: getPrefix(\'date-picker\', this.lib),\n        props: extends_default()({\n          clearable: this.clearable,\n          type: item.type\n        }, item.props || {})\n      };\n      return this.generateTag(tag);\n    },\n    renderTimePicker: function renderTimePicker(h, item) {\n      var tag = {\n        h: h,\n        item: item,\n        tagName: getPrefix(\'time-picker\', this.lib),\n        props: extends_default()({\n          clearable: this.clearable,\n          type: item.type\n        }, item.props || {})\n      };\n      return this.generateTag(tag);\n    },\n\n    // 渲染 radio\n    renderRadio: function renderRadio(h, item) {\n      var tag = {\n        h: h,\n        item: item,\n        tagName: getPrefix(\'radio\', this.lib),\n        props: item.props || {},\n        children: item.text\n      };\n      return this.generateTag(tag);\n    },\n\n    // 渲染 radio group\n    renderRadioGroup: function renderRadioGroup(h, item) {\n      var _this5 = this;\n\n      var tag = {\n        h: h,\n        item: item,\n        tagName: getPrefix(\'radio-group\', this.lib),\n        props: item.props || {},\n        children: item.options.map(function (option) {\n          return h(getPrefix(\'radio\', _this5.lib), {\n            props: {\n              label: option.value\n            }\n          }, option.text);\n        })\n      };\n      return this.generateTag(tag);\n    },\n\n    // 渲染 switch\n    renderSwitch: function renderSwitch(h, item) {\n      item.width = item.width || 60;\n      var tag = {\n        h: h,\n        item: item,\n        tagName: getPrefix(\'switch\', this.lib),\n        props: item.props || {}\n      };\n      return this.generateTag(tag);\n    },\n\n    // 渲染 slider\n    renderSlider: function renderSlider(h, item) {\n      var tag = {\n        h: h,\n        item: item,\n        tagName: getPrefix(\'slider\', this.lib),\n        props: item.props || {}\n      };\n      return this.generateTag(tag);\n    },\n\n    // 渲染 slider\n    renderInputNumber: function renderInputNumber(h, item) {\n      item.width = item.width || 150;\n      var tag = {\n        h: h,\n        item: item,\n        tagName: getPrefix(\'input-number\', this.lib),\n        props: item.props || {}\n      };\n      return this.generateTag(tag);\n    },\n\n    // 生产 tag\n    generateTag: function generateTag(_ref) {\n      var _this6 = this;\n\n      var h = _ref.h,\n          item = _ref.item,\n          tagName = _ref.tagName,\n          props = _ref.props,\n          children = _ref.children,\n          _ref$on = _ref.on,\n          on = _ref$on === undefined ? {} : _ref$on,\n          _ref$nativeOn = _ref.nativeOn,\n          nativeOn = _ref$nativeOn === undefined ? {} : _ref$nativeOn;\n\n      return h(tagName, {\n        props: extends_default()({\n          value: this.form[item.key],\n          min: 0,\n          max: 9999999\n        }, props, {\n          disabled: this.disabled || item.disabled\n        }),\n        attrs: item.attrs || {},\n        style: {\n          width: item.type === \'switch\' ? null : (item.width || this[\'contentWidth\']) + \'px\'\n        },\n        on: extends_default()({\n          input: function input(value) {\n            value = _this6.formatDateValue(value, item);\n            _this6.form[item.key] = value;\n            _this6.emitInput(value, item);\n          }\n        }, on),\n        nativeOn: nativeOn\n      }, children);\n    },\n\n    // 格式化日期返回，避免 null 的出现\n    formatDateValue: function formatDateValue(value, item) {\n      switch (item.type) {\n        case \'date\':\n        case \'datetitme\':\n          if (!value) {\n            value = \'\';\n          }\n          break;\n        case \'daterange\':\n        case \'datetimerange\':\n          if (!value) {\n            value = [\'\', \'\'];\n          }\n          break;\n      }\n      return value;\n    },\n\n    // 触发 item onInput 事件\n    emitInput: function emitInput(value, item) {\n      if (typeof item.onInput === \'function\') {\n        item.onInput(value, item, this.form);\n      }\n    },\n\n    // 提交事件\n    submit: function submit() {\n      var _this7 = this;\n\n      this.$refs.form.validate(function (valid) {\n        _this7.$emit(\'submit\', _this7.getForm(), valid);\n      });\n    },\n\n    // 清空 form 表单\n    reset: function reset() {\n      this.$refs.form.resetFields();\n      this.form = this.initForm();\n    },\n\n    // 根据 key 获取 value\n    getFormBykey: function getFormBykey(key) {\n      return this.form[key];\n    },\n\n    // 获取整个 form\n    getForm: function getForm() {\n      return extends_default()({}, this.form);\n    },\n\n    // 设值\n    setForm: function setForm(form) {\n      for (var key in form) {\n        this.form[key] = form[key];\n      }\n    }\n  }\n});\n// CONCATENATED MODULE: ./packages/iview-form/iview-form.vue\nvar normalizeComponent = __webpack_require__("./node_modules/vue-loader/lib/component-normalizer.js")\n/* script */\n\n\n/* template */\nvar __vue_template__ = null\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  iview_form,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ var iview_form_iview_form = (Component.exports);\n\n// CONCATENATED MODULE: ./packages/iview-form/index.js\n\r\n\r\nconst install = (Vue) => {\r\n  Vue.component(iview_form_iview_form.name, iview_form_iview_form)\r\n}\r\n\r\nif (typeof window !== \'undefined\' && window.Vue) {\r\n  install(window.Vue)\r\n}\r\n\r\n/* harmony default export */ var packages_iview_form = (iview_form_iview_form);\n// CONCATENATED MODULE: ./src/index.js\n\n\n/* harmony default export */ var src = (packages_iview_form);\n// CONCATENATED MODULE: ./node_modules/babel-loader/lib!./node_modules/vue-loader/lib/selector.js?type=script&index=0!./examples/src/App.vue\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n\nvar initForm = {\n  key1: \'默认值测试\',\n  key2: \'\',\n  key3: [\'\', \'\'],\n  key4: [\'\', \'\'],\n  key5: \'\'\n};\n\n/* harmony default export */ var App = ({\n  name: \'App\',\n  components: {\n    iViewForm: src\n  },\n  data: function data() {\n    return {\n      // 测试用数据\n      formList: [{\n        title: \'input\',\n        type: \'input\',\n        key: \'key1\',\n        rule: { required: true, message: \'请输入用户名\', trigger: \'blur\' },\n        props: {\n          placeholder: \'hello\'\n        }\n      }, {\n        title: \'time\',\n        type: \'time\',\n        key: \'key2\'\n      }, {\n        title: \'daterange\',\n        type: \'daterange\',\n        key: \'key3\'\n      }, {\n        title: \'datetimerange\',\n        type: \'datetimerange\',\n        key: \'key4\'\n      }, {\n        title: \'textarea\',\n        type: \'input\',\n        key: \'key5\',\n        props: {\n          placeholder: \'textarea\',\n          type: \'textarea\'\n        }\n      }]\n    };\n  },\n  mounted: function mounted() {\n    this.setForm(initForm);\n  },\n\n  methods: {\n    onClick: function onClick() {\n      this.setForm({\n        \'key1\': \'你好呀！\',\n        \'key2\': 5\n      });\n    },\n    setForm: function setForm(form) {\n      this.$refs.form.setForm(form);\n    },\n    onSubmit: function onSubmit(form) {\n      console.log(form);\n    },\n    jumpPage: function jumpPage(target) {\n      window.open(target);\n    }\n  }\n});\n// CONCATENATED MODULE: ./node_modules/vue-loader/lib/template-compiler?{"id":"data-v-396356a9","hasScoped":false,"transformToRequire":{"video":["src","poster"],"source":"src","img":"src","image":"xlink:href"},"buble":{"transforms":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./examples/src/App.vue\nvar App_render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'div\',{attrs:{"id":"app"}},[_c(\'div\',{staticClass:"app-header"},[_c(\'span\',{staticClass:"title"},[_vm._v("iView-form")]),_vm._v(" "),_c(\'span\',[_c(\'i-button\',{staticClass:"ms",attrs:{"icon":"social-github"},on:{"click":function($event){_vm.jumpPage(\'https://github.com/viewweiwu/iview-form\')}}},[_vm._v("github")])],1)]),_vm._v(" "),_c(\'h2\',[_vm._v("普通示例")]),_vm._v(" "),_vm._m(0),_vm._v(" "),_c(\'h2\',[_vm._v("日期示例")]),_vm._v(" "),_vm._m(1),_vm._v(" "),_c(\'h2\',[_vm._v("登陆示例")]),_vm._v(" "),_vm._m(2),_vm._v(" "),_vm._m(3),_vm._v(" "),_c(\'h2\',[_vm._v("【grid】网格布局")]),_vm._v(" "),_vm._m(4),_vm._v(" "),_vm._m(5),_vm._v(" "),_vm._m(6),_vm._v(" "),_vm._m(7),_vm._v(" "),_vm._m(8),_vm._v(" "),_c(\'h2\',[_vm._v("【render】自定义 render")]),_vm._v(" "),_vm._m(9),_vm._v(" "),_c(\'h2\',[_vm._v("【isShow】控制显示和隐藏")]),_vm._v(" "),_vm._m(10)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'iframe\',{staticStyle:{"width":"100%"},attrs:{"height":"500","scrolling":"no","title":"iview-form demo","src":"//codepen.io/viewweiwu/embed/preview/GdwGPE/?height=500&theme-id=dark&default-tab=js,result&embed-version=2","frameborder":"no","allowtransparency":"true","allowfullscreen":"true"}},[_vm._v("See the Pen "),_c(\'a\',{attrs:{"href":"https://codepen.io/viewweiwu/pen/GdwGPE/"}},[_vm._v("iview-form_demo1")]),_vm._v(" by view ("),_c(\'a\',{attrs:{"href":"https://codepen.io/viewweiwu"}},[_vm._v("@viewweiwu")]),_vm._v(") on "),_c(\'a\',{attrs:{"href":"https://codepen.io"}},[_vm._v("CodePen")]),_vm._v(".\\n  ")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'iframe\',{staticStyle:{"width":"100%"},attrs:{"height":"500","scrolling":"no","title":"iview-form date","src":"//codepen.io/viewweiwu/embed/preview/qYQKGZ/?height=500&theme-id=dark&default-tab=js,result&embed-version=2","frameborder":"no","allowtransparency":"true","allowfullscreen":"true"}},[_vm._v("See the Pen "),_c(\'a\',{attrs:{"href":"https://codepen.io/viewweiwu/pen/qYQKGZ/"}},[_vm._v("iview-form demo1")]),_vm._v(" by view ("),_c(\'a\',{attrs:{"href":"https://codepen.io/viewweiwu"}},[_vm._v("@viewweiwu")]),_vm._v(") on "),_c(\'a\',{attrs:{"href":"https://codepen.io"}},[_vm._v("CodePen")]),_vm._v(".\\n  ")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'div\',{staticClass:"info"},[_c(\'p\',[_vm._v("如果你设置了 enterSubmit, 那么按 enter 会出发 submit 事件哦!")]),_vm._v(" "),_c(\'p\',[_vm._v("设定了 rule 之后，submit 时会触发校验，并且得到的第二个参数就是触发的结果。")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'iframe\',{staticStyle:{"width":"100%"},attrs:{"height":"500","scrolling":"no","title":"iview-form login","src":"//codepen.io/viewweiwu/embed/preview/QrJBLJ/?height=500&theme-id=dark&default-tab=js,result&embed-version=2","frameborder":"no","allowtransparency":"true","allowfullscreen":"true"}},[_vm._v("See the Pen "),_c(\'a\',{attrs:{"href":"https://codepen.io/viewweiwu/pen/QrJBLJ/"}},[_vm._v("iview-form login")]),_vm._v(" by view ("),_c(\'a\',{attrs:{"href":"https://codepen.io/viewweiwu"}},[_vm._v("@viewweiwu")]),_vm._v(") on "),_c(\'a\',{attrs:{"href":"https://codepen.io"}},[_vm._v("CodePen")]),_vm._v(".\\n  ")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'div\',{staticClass:"info"},[_c(\'p\',[_vm._v("gird 支持三种类型的值")]),_vm._v(" "),_c(\'p\',[_vm._v("下面会逐个解释")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'div\',{staticClass:"info"},[_c(\'p\',[_vm._v("1、【Number】表示每行会有几个表单元素")]),_vm._v(" "),_c(\'p\',[_vm._v("例如：:grid=\\"2\\" 表示每行有两个元素，每个占 50% 宽度。")]),_vm._v(" "),_c(\'p\',[_vm._v("例如：:grid=\\"3\\" 表示每行有三个元素，每个占 33.33% 宽度。")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'div\',{staticClass:"info"},[_c(\'p\',[_vm._v("2、【Array】每个数字表示这一行有几个表单元素")]),_vm._v(" "),_c(\'p\',[_vm._v("例如：:grid=\\"[3, 1, 2]\\" 表示第一行会有 3 个，第二行有 1 个，第三行有 2 个。")]),_vm._v(" "),_c(\'p\',[_vm._v("例如：:grid=\\"[2, 2, 2]\\" 表示每一行都是 2 个，跟设置成 Number 没区别。")]),_vm._v(" "),_c(\'p\',[_vm._v("注意：如果你有 7 个表单元素，但是你的数组总和只有 4 ，那么剩下的 3 个表单元素将会被忽略（不显示）。")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'div\',{staticClass:"info"},[_c(\'p\',[_vm._v("3、【二维Array】每个数组的每个数字表示这一行占比, 且每一行的总和是 24 ")]),_vm._v(" "),_c(\'p\',[_vm._v("例如：:grid=\\"[[6, 12, 6], [12, 12], [24]]\\" 取第一个数组 [6, 12, 6] 做解释，意思是所占宽度是 6/24, 12/24, 6/24。")]),_vm._v(" "),_c(\'p\',[_vm._v("iView 和 element-ui 组件库都用 gird 布局的，这里的 24 格栅格布局，就是组件库栅格布局。")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'iframe\',{staticStyle:{"width":"100%"},attrs:{"height":"500","scrolling":"no","title":"iview-form grid","src":"//codepen.io/viewweiwu/embed/preview/NMEzZB/?height=500&theme-id=dark&default-tab=js,result&embed-version=2","frameborder":"no","allowtransparency":"true","allowfullscreen":"true"}},[_vm._v("See the Pen "),_c(\'a\',{attrs:{"href":"https://codepen.io/viewweiwu/pen/NMEzZB/"}},[_vm._v("iview-form date")]),_vm._v(" by view ("),_c(\'a\',{attrs:{"href":"https://codepen.io/viewweiwu"}},[_vm._v("@viewweiwu")]),_vm._v(") on "),_c(\'a\',{attrs:{"href":"https://codepen.io"}},[_vm._v("CodePen")]),_vm._v(".\\n  ")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'iframe\',{staticStyle:{"width":"100%"},attrs:{"height":"500","scrolling":"no","title":"iview-form render","src":"//codepen.io/viewweiwu/embed/preview/MGzBKM/?height=500&theme-id=dark&default-tab=js,result&embed-version=2","frameborder":"no","allowtransparency":"true","allowfullscreen":"true"}},[_vm._v("See the Pen "),_c(\'a\',{attrs:{"href":"https://codepen.io/viewweiwu/pen/MGzBKM/"}},[_vm._v("iview-form render")]),_vm._v(" by view ("),_c(\'a\',{attrs:{"href":"https://codepen.io/viewweiwu"}},[_vm._v("@viewweiwu")]),_vm._v(") on "),_c(\'a\',{attrs:{"href":"https://codepen.io"}},[_vm._v("CodePen")]),_vm._v(".\\n  ")])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'iframe\',{staticStyle:{"width":"100%"},attrs:{"height":"500","scrolling":"no","title":"iview-form isShow","src":"//codepen.io/viewweiwu/embed/preview/erQjzY/?height=500&theme-id=dark&default-tab=js,result&embed-version=2","frameborder":"no","allowtransparency":"true","allowfullscreen":"true"}},[_vm._v("See the Pen "),_c(\'a\',{attrs:{"href":"https://codepen.io/viewweiwu/pen/erQjzY/"}},[_vm._v("iview-form isShow")]),_vm._v(" by view ("),_c(\'a\',{attrs:{"href":"https://codepen.io/viewweiwu"}},[_vm._v("@viewweiwu")]),_vm._v(") on "),_c(\'a\',{attrs:{"href":"https://codepen.io"}},[_vm._v("CodePen")]),_vm._v(".\\n  ")])}]\nvar esExports = { render: App_render, staticRenderFns: staticRenderFns }\n/* harmony default export */ var src_App = (esExports);\n// CONCATENATED MODULE: ./examples/src/App.vue\nfunction injectStyle (ssrContext) {\n  __webpack_require__("./node_modules/extract-text-webpack-plugin/dist/loader.js?{\\"omit\\":1,\\"remove\\":true}!./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js?{\\"sourceMap\\":true}!./node_modules/vue-loader/lib/style-compiler/index.js?{\\"vue\\":true,\\"id\\":\\"data-v-396356a9\\",\\"scoped\\":false,\\"hasInlineConfig\\":false}!./node_modules/_less-loader@4.1.0@less-loader/dist/cjs.js?{\\"sourceMap\\":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./examples/src/App.vue")\n}\nvar App_normalizeComponent = __webpack_require__("./node_modules/vue-loader/lib/component-normalizer.js")\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar App___vue_template_functional__ = false\n/* styles */\nvar App___vue_styles__ = injectStyle\n/* scopeId */\nvar App___vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar App___vue_module_identifier__ = null\nvar App_Component = App_normalizeComponent(\n  App,\n  src_App,\n  App___vue_template_functional__,\n  App___vue_styles__,\n  App___vue_scopeId__,\n  App___vue_module_identifier__\n)\n\n/* harmony default export */ var examples_src_App = (App_Component.exports);\n\n// EXTERNAL MODULE: external "iview"\nvar external__iview_ = __webpack_require__("iview");\nvar external__iview__default = /*#__PURE__*/__webpack_require__.n(external__iview_);\n\n// EXTERNAL MODULE: external "null"\nvar external__null_ = __webpack_require__("iview/dist/styles/iview.css");\nvar external__null__default = /*#__PURE__*/__webpack_require__.n(external__null_);\n\n// CONCATENATED MODULE: ./examples/src/index.js\n\r\n\r\n\r\n\r\n\r\nexternal__Vue__default.a.use(external__iview__default.a)\r\n\r\nexternal__Vue__default.a.config.productionTip = false\r\n\r\n/* eslint-disable no-new */\r\nnew external__Vue__default.a({\r\n  el: \'#app-container\',\r\n  components: { App: examples_src_App },\r\n  template: \'<App/>\'\r\n})//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./examples/src/index.js\n')},'./node_modules/extract-text-webpack-plugin/dist/loader.js?{"omit":1,"remove":true}!./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js?{"sourceMap":true}!./node_modules/vue-loader/lib/style-compiler/index.js?{"vue":true,"id":"data-v-396356a9","scoped":false,"hasInlineConfig":false}!./node_modules/_less-loader@4.1.0@less-loader/dist/cjs.js?{"sourceMap":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./examples/src/App.vue':function(module,exports){eval('// removed by extract-text-webpack-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvZXh0cmFjdC10ZXh0LXdlYnBhY2stcGx1Z2luL2Rpc3QvbG9hZGVyLmpzP3tcIm9taXRcIjoxLFwicmVtb3ZlXCI6dHJ1ZX0hLi9ub2RlX21vZHVsZXMvdnVlLXN0eWxlLWxvYWRlci9pbmRleC5qcyEuL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzP3tcInNvdXJjZU1hcFwiOnRydWV9IS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3N0eWxlLWNvbXBpbGVyL2luZGV4LmpzP3tcInZ1ZVwiOnRydWUsXCJpZFwiOlwiZGF0YS12LTM5NjM1NmE5XCIsXCJzY29wZWRcIjpmYWxzZSxcImhhc0lubGluZUNvbmZpZ1wiOmZhbHNlfSEuL25vZGVfbW9kdWxlcy9fbGVzcy1sb2FkZXJANC4xLjBAbGVzcy1sb2FkZXIvZGlzdC9janMuanM/e1wic291cmNlTWFwXCI6dHJ1ZX0hLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3IuanM/dHlwZT1zdHlsZXMmaW5kZXg9MCEuL2V4YW1wbGVzL3NyYy9BcHAudnVlLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vZXhhbXBsZXMvc3JjL0FwcC52dWU/MTA0YSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vbm9kZV9tb2R1bGVzL2V4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpbi9kaXN0L2xvYWRlci5qcz97XCJvbWl0XCI6MSxcInJlbW92ZVwiOnRydWV9IS4vbm9kZV9tb2R1bGVzL3Z1ZS1zdHlsZS1sb2FkZXIhLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlcj97XCJzb3VyY2VNYXBcIjp0cnVlfSEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9zdHlsZS1jb21waWxlcj97XCJ2dWVcIjp0cnVlLFwiaWRcIjpcImRhdGEtdi0zOTYzNTZhOVwiLFwic2NvcGVkXCI6ZmFsc2UsXCJoYXNJbmxpbmVDb25maWdcIjpmYWxzZX0hLi9ub2RlX21vZHVsZXMvX2xlc3MtbG9hZGVyQDQuMS4wQGxlc3MtbG9hZGVyL2Rpc3QvY2pzLmpzP3tcInNvdXJjZU1hcFwiOnRydWV9IS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yLmpzP3R5cGU9c3R5bGVzJmluZGV4PTAhLi9leGFtcGxlcy9zcmMvQXBwLnZ1ZVxuLy8gbW9kdWxlIGlkID0gLi9ub2RlX21vZHVsZXMvZXh0cmFjdC10ZXh0LXdlYnBhY2stcGx1Z2luL2Rpc3QvbG9hZGVyLmpzP3tcIm9taXRcIjoxLFwicmVtb3ZlXCI6dHJ1ZX0hLi9ub2RlX21vZHVsZXMvdnVlLXN0eWxlLWxvYWRlci9pbmRleC5qcyEuL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzP3tcInNvdXJjZU1hcFwiOnRydWV9IS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3N0eWxlLWNvbXBpbGVyL2luZGV4LmpzP3tcInZ1ZVwiOnRydWUsXCJpZFwiOlwiZGF0YS12LTM5NjM1NmE5XCIsXCJzY29wZWRcIjpmYWxzZSxcImhhc0lubGluZUNvbmZpZ1wiOmZhbHNlfSEuL25vZGVfbW9kdWxlcy9fbGVzcy1sb2FkZXJANC4xLjBAbGVzcy1sb2FkZXIvZGlzdC9janMuanM/e1wic291cmNlTWFwXCI6dHJ1ZX0hLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc2VsZWN0b3IuanM/dHlwZT1zdHlsZXMmaW5kZXg9MCEuL2V4YW1wbGVzL3NyYy9BcHAudnVlXG4vLyBtb2R1bGUgY2h1bmtzID0gMSJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/extract-text-webpack-plugin/dist/loader.js?{"omit":1,"remove":true}!./node_modules/vue-style-loader/index.js!./node_modules/css-loader/index.js?{"sourceMap":true}!./node_modules/vue-loader/lib/style-compiler/index.js?{"vue":true,"id":"data-v-396356a9","scoped":false,"hasInlineConfig":false}!./node_modules/_less-loader@4.1.0@less-loader/dist/cjs.js?{"sourceMap":true}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./examples/src/App.vue\n')},iview:function(module,exports){eval("module.exports = iview;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXZpZXcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJpdmlld1wiPzY2M2MiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBpdmlldztcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyBleHRlcm5hbCBcIml2aWV3XCJcbi8vIG1vZHVsZSBpZCA9IGl2aWV3XG4vLyBtb2R1bGUgY2h1bmtzID0gMSJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///iview\n")},"iview/dist/styles/iview.css":function(module,exports){eval("module.exports = null;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXZpZXcvZGlzdC9zdHlsZXMvaXZpZXcuY3NzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwibnVsbFwiPzYxMTYiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBudWxsO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIGV4dGVybmFsIFwibnVsbFwiXG4vLyBtb2R1bGUgaWQgPSBpdmlldy9kaXN0L3N0eWxlcy9pdmlldy5jc3Ncbi8vIG1vZHVsZSBjaHVua3MgPSAxIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///iview/dist/styles/iview.css\n")}},["./examples/src/index.js"]);